apply plugin: 'com.android.application'
apply plugin: 'com.github.ben-manes.versions'

def cfg = rootProject.ext.configuration
def libs = rootProject.ext.libraries

android {

    compileSdkVersion cfg.compileVersion
    buildToolsVersion cfg.buildToolsVersion

    defaultConfig {

        applicationId cfg.package
        minSdkVersion cfg.minSdk
        targetSdkVersion cfg.targetSdk
        versionCode cfg.version_code
        versionName cfg.version_name

        resConfig "en"
        buildConfigField "String", "TMDB_API_KEY", "\"${tmdb_api_key}\""

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {

        debug {
            applicationIdSuffix ".debug"
            versionNameSuffix "-debug"
        }

        release {
            minifyEnabled true
            shrinkResources true
            signingConfig android.signingConfigs.debug
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    dataBinding {
        enabled = true
    }

    dexOptions {
        dexInProcess true
        maxProcessCount 4
        javaMaxHeapSize "3g"
    }
}


dependencies {

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "com.android.support:appcompat-v7:${libs.support}"
    implementation "com.android.support:recyclerview-v7:${libs.support}"
    implementation "com.android.support:cardview-v7:${libs.support}"
    implementation "com.android.support:percent:${libs.support}"
    implementation "com.android.support:palette-v7:${libs.support}"
    implementation "com.android.support:design:${libs.support}"

    // android arch lifecycle
    implementation "android.arch.lifecycle:extensions:${libs.arch}"
    implementation "android.arch.lifecycle:common-java8:${libs.arch}"
    annotationProcessor "android.arch.lifecycle:compiler:${libs.arch}"

    // android arch room
    implementation "android.arch.persistence.room:runtime:${libs.arch}"
    implementation "android.arch.persistence.room:rxjava2:${libs.arch}"
    annotationProcessor "android.arch.persistence.room:compiler:${libs.arch}"

    // android arch paging
    implementation "android.arch.paging:runtime:1.0.0-alpha2"

    // Google Play services
    implementation "com.google.android.gms:play-services-auth:${libs.google_play_services}"

    // butterknife
    implementation "com.jakewharton:butterknife:${libs.butterknife}"
    annotationProcessor "com.jakewharton:butterknife-compiler:${libs.butterknife}"

    // dagger2
    implementation "com.google.dagger:dagger:${libs.dagger2}"
    implementation "com.google.dagger:dagger-android:${libs.dagger2}"
    implementation "com.google.dagger:dagger-android-support:${libs.dagger2}"
    annotationProcessor "com.google.dagger:dagger-compiler:${libs.dagger2}"
    annotationProcessor "com.google.dagger:dagger-android-processor:${libs.dagger2}"

    // debugdrawer
    debugImplementation "io.palaima.debugdrawer:debugdrawer:${libs.debugdrawer}"
    releaseImplementation "io.palaima.debugdrawer:debugdrawer-no-op:${libs.debugdrawer}"
    implementation "io.palaima.debugdrawer:debugdrawer-commons:${libs.debugdrawer}"
    implementation "io.palaima.debugdrawer:debugdrawer-okhttp3:${libs.debugdrawer}"
    implementation "io.palaima.debugdrawer:debugdrawer-glide:${libs.debugdrawer}"

    // glide
    implementation "com.github.bumptech.glide:glide:${libs.glide}"
    annotationProcessor "com.github.bumptech.glide:compiler:${libs.glide}"
    implementation "com.github.bumptech.glide:okhttp3-integration:${libs.glide}"
    implementation "com.github.bumptech.glide:recyclerview-integration:${libs.glide}"

    // glide-transformations
    implementation "jp.wasabeef:glide-transformations:${libs.glide_transformations}"

    // leakcanary
    debugImplementation "com.squareup.leakcanary:leakcanary-android:${libs.leakcanary}"
    releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:${libs.leakcanary}"

    // retrofit
    implementation "com.squareup.retrofit2:retrofit:${libs.retrofit}"
    implementation "com.squareup.retrofit2:converter-moshi:${libs.retrofit}"
    implementation "com.jakewharton.retrofit:retrofit2-rxjava2-adapter:${libs.retrofit_adapter}"
    implementation "com.squareup.okhttp3:okhttp:${libs.okhttp}"
    debugImplementation "com.squareup.okhttp3:logging-interceptor:${libs.okhttp}"

    // rx
    implementation "io.reactivex.rxjava2:rxjava:${libs.rxjava2}"
    implementation "io.reactivex.rxjava2:rxandroid:${libs.rxandroid}"

    // stetho
    debugImplementation "com.facebook.stetho:stetho:${libs.stetho}"
    debugImplementation "com.facebook.stetho:stetho-okhttp3:${libs.stetho}"

    // threetenabp
    implementation "com.jakewharton.threetenabp:threetenabp:${libs.threetenabp}"

    // timber
    implementation "com.jakewharton.timber:timber:${libs.timber}"

    //
    // test
    //

    testImplementation 'junit:junit:4.12'
}
